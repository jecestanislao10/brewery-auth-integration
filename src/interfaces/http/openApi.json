{
  "openapi": "3.0.0",
  "info": {
    "title": "AmberJS API",
    "version": "v1"
  },
  "servers": [
    {

      "url": "https://final-amberjs-task.herokuapp.com"
    }
  ],
  "paths": {
    "/api/login" : {
      "post" : {
        "description" : "Login User",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },
              "examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\"\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          }
        }
      }
    },
    "/api/add" : {
      "post" : {
        "description" : "Create new user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },
              "examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          }
        }
      }
    },
    "/api/users" : {
      "get" : {
        "description" : "Get list of all users",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          },
          "401" : {
            "content" : {

            }
          },
          "403" : {
            "content" : {

            }
          }
        }
      }
    },
    "/api/user" : {
      "get" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          },
          "401" : {
            "content" : {

            }
          },
          "403" : {
            "content" : {

            }
          }
        }
      }
    },
    "/api/update" : {
      "put" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },"examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          },
          "401" : {
            "content" : {

            }
          },
          "403" : {
            "content" : {

            }
          }
        }
      }
    },    
    "/api/delete" : {
      "delete" : {
        "description" : "Get user data",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/body"
              },"examples" : {
                "0" : {
                  "value" : "{\n\t\"email\": \"jec@stratpoint.com\",\n\t\"password\": \"111111\",\n\t\"firstName\": \"Jerico\",\n\t\"lastName\": \"Jerico\",\n\t\"middleName\": \"Jerico\",\n\t\"role\": \"user\"\n}"
                }
              }
            
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {

            }
          },
          "401" : {
            "content" : {

            }
          },
          "403" : {
            "content" : {

            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "listUsers",
        "tags": [ "Users" ],
        "responses": {
          "200": {
            "description": "List of all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "tags": [ "Users" ],
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User not created because of validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "showUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to show",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Return user with given id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "requestBody": {
          "description": "User new data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": [ "Users" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "202": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/defaultResponses/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "defaultResponses": {
    "ValidationError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "ValidationError" ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/defaultResponses/ValidationErrorDetail"
          }
        }
      }
    },
    "ValidationErrorDetail": {
      "properties": {
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "NotFoundError": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [ "NotFoundError" ]
        },
        "details": {
          "type": "string",
          "enum": [ "User with id {id} not found" ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "UUID",
            "description": "Universally Unique Identifier representing a user",
            "x-primary-key": true
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "NewUser": {
        "properties": {
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          },
          "role": {
            "type": "string",
            "required": true
          },
          "firstName": {
            "type": "string",
            "required": true
          },
          "middleName": {
            "type": "string",
            "required": true
          },
          "lastName": {
            "type": "string",
            "required": true
          }
        }
      },
      "LoginUser": {
        "properties": {
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          }
        }
      }
    }
  }
}
